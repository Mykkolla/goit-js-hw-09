{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,uBAChCC,EAAQF,SAASC,cAAc,sBAC/BE,EAAUH,SAASC,cAAc,wBAGnCG,EAAO,EACXL,EAAOM,iBAAiB,SAAS,SAACC,GAElC,OADAF,EAAQE,EAAMC,cAAcC,K,IAG5B,IAAIC,EAAM,EACVP,EAAMG,iBAAiB,SAAS,SAACC,GAEjC,OADEG,EAAOH,EAAMC,cAAcC,K,IAG7B,IAAIE,EAAQ,EAWZ,SAASC,EAAcC,EAAUC,GAa/B,OAVe,IAAIC,SAAS,SAACC,EAASC,GACpCC,YAAW,WACT,IAAMC,EAAS,CAAEN,WAAUO,MAAAN,GACvBA,EAAQ,GAAM,EAChBE,EAAQG,GAERF,EAAOE,E,GAERL,E,IArBPV,EAAQE,iBAAiB,SAAS,SAACC,GAEnC,OADEI,EAAQJ,EAAMC,cAAcC,K,IAK9BR,SAASC,cAAc,SAASI,iBAAiB,UAoBjD,SAAee,GACbA,EAAEC,iBAGJ,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAAQY,IAAK,CAG/BX,EAFiBW,EAAI,EACNlB,EAASkB,EAAIb,GACIc,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUa,EAAKD,EAALL,MAChDO,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfjB,EAAS,QAAYiB,OAANJ,EAAM,M,IAErEK,OAAM,SAAAN,G,IAAGZ,EAAQY,EAARZ,SAAUmB,EAAKP,EAALL,MAClBO,EAAA7B,GAAS8B,OAAOC,QAAQ,sBAAqCC,OAAfjB,EAAS,QAAYiB,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay1 = document.querySelector(\"input[name='delay']\");\nconst step1 = document.querySelector(\"input[name='step']\")\nconst amount1 = document.querySelector(\"input[name='amount']\")\n\n\nlet delay= 0;\ndelay1.addEventListener(\"input\", (event) => {\ndelay = event.currentTarget.value;\nreturn delay;\n});\nlet step= 0;\nstep1.addEventListener(\"input\", (event) => {\n  step = event.currentTarget.value;\nreturn step;\n});\nlet amount= 0;\namount1.addEventListener(\"input\", (event) => {\n  amount= event.currentTarget.value;\nreturn amount;\n});\n\n\ndocument.querySelector('.form').addEventListener('submit', Event);\n\n\n\nfunction createPromise(position, delay) {\n;\n  // const shouldResolve = Math.random() > 0.3;\n  const promis = new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      const result = { position, delay };\n      if (delay % 2 === 0) {\n        resolve(result)\n      } else {\n        reject(result)\n      }\n    }, delay)\n  });\n  return promis;\n}\n\nfunction Event(e) {\n  e.preventDefault();\n\n\nfor (let i = 0; i < amount; i++) {\n  const position = i + 1;\n  const delayi = delay + (i * step);\n  createPromise(position, delayi).then(({ position, delay }) => {\n    Notiflix.Notify.warning(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n};\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay1","document","querySelector","$ce04d3a99e08e73b$var$step1","$ce04d3a99e08e73b$var$amount1","$ce04d3a99e08e73b$var$delay","addEventListener","event","currentTarget","value","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay2","Promise","resolve","reject","setTimeout","result","delay","e","preventDefault","i","then","param","delay3","$parcel$interopDefault","Notify","warning","concat","catch","delay4"],"version":3,"file":"03-promises.781c5f78.js.map"}